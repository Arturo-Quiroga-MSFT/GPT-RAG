trigger:
  # - main
  # - master
  # - dev
  - none

pool:
  vmImage: ubuntu-latest

# edit these to match the names of your environments
variables:
  dev_env: <dev_env_name>
  test_env: <test_env_name>
  prod_env: <prod_env_name>

stages:
  - stage: "DeployDev"
    displayName: "Deploy to the dev environment"
    jobs:
      - deployment: DeployDev
        environment: $(dev_env)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ./deploy-template.yml
                  parameters:
                    azureEnvName: "$(dev_env)"
                    serviceConnection: "$(dev_env)" # if your service connection name is different from the environment name, change this

  - stage: "DeployTest"
    displayName: "Deploy to the test environment"
    dependsOn: DeployDev
    condition: succeeded('DeployDev')
    jobs:
      - deployment: DeployTest
        environment: $(test_env)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ./deploy-template.yml
                  parameters:
                    azureEnvName: "$(test_env)"
                    serviceConnection: "$(test_env)" # if your service connection name is different from the environment name, change this

  - stage: "DeployProd"
    displayName: "Deploy to the prod environment"
    dependsOn: DeployTest
    condition: succeeded('DeployTest')
    jobs:
      - deployment: DeployProd
        environment: $(prod_env)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ./deploy-template.yml
                  parameters:
                    azureEnvName: "$(prod_env)"
                    serviceConnection: "$(prod_env)" # if your service connection name is different from the environment name, change this
# # Run when commits are pushed to mainline branch (main or master)
# # Set this to the mainline branch you are using
# trigger:
#   # - main
#   # - master
#   - dev

# # Azure Pipelines workflow to deploy to Azure using azd
# # To configure required secrets and service connection for connecting to Azure, simply run `azd pipeline config --provider azdo`
# # Task "Install azd" needs to install setup-azd extension for azdo - https://marketplace.visualstudio.com/items?itemName=ms-azuretools.azd
# # See below for alternative task to install azd if you can't install above task in your organization

# pool:
#   vmImage: ubuntu-latest

# steps:
#   # - task: setup-azd@0
#   #   displayName: Install azd

#   # If you can't install above task in your organization, you can comment it and uncomment below task to install azd
#   - task: Bash@3
#     displayName: Install azd
#     inputs:
#       targetType: 'inline'
#       script: |
#         curl -fsSL https://aka.ms/install-azd.sh | bash

#   # azd delegate auth to az to use service connection with AzureCLI@2
#   - pwsh: |
#       azd config set auth.useAzCliAuth "true"
#     displayName: Configure AZD to Use AZ CLI Authentication.

#   - task: AzureCLI@2
#     displayName: Provision Infrastructure
#     inputs:
#       azureSubscription: azconnection
#       scriptType: bash
#       scriptLocation: inlineScript
#       inlineScript: |
#         azd provision --no-prompt
#     env:
#       AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
#       AZURE_ENV_NAME: $(AZURE_ENV_NAME)
#       AZURE_LOCATION: $(AZURE_LOCATION)
#       AZD_INITIAL_ENVIRONMENT_CONFIG: $(secrets.AZD_INITIAL_ENVIRONMENT_CONFIG)

#   - task: AzureCLI@2
#     displayName: Package Services
#     inputs:
#       azureSubscription: azconnection
#       scriptType: bash
#       scriptLocation: inlineScript
#       inlineScript: |
#         azd package --no-prompt
#     env:
#       AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
#       AZURE_ENV_NAME: $(AZURE_ENV_NAME)
#       AZURE_LOCATION: $(AZURE_LOCATION)

#   - task: AzureCLI@2
#     displayName: Deploy Services
#     inputs:
#       azureSubscription: azconnection
#       scriptType: bash
#       scriptLocation: inlineScript
#       inlineScript: |
#         azd deploy --no-prompt
#     env:
#       AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
#       AZURE_ENV_NAME: $(AZURE_ENV_NAME)
#       AZURE_LOCATION: $(AZURE_LOCATION)
